[build-system]
build-backend = "setuptools.build_meta"
requires = [
    "setuptools>=61.2",
    "setuptools_scm",
]

[project]
authors = [{name = "Common Partial Wave Analysis", email = "compwa-admin@ep1.rub.de"}]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python",
    "Topic :: Scientific/Engineering :: Physics",
    "Topic :: Scientific/Engineering",
]
dependencies = [
    "graphviz",
    "ipympl",
    "numpy==1.*",
]
description = "Source code for the ComPWA Organization pages"
dynamic = ["version"]
license = {file = "LICENSE"}
maintainers = [{email = "compwa-admin@ep1.rub.de"}]
name = "compwa-org"
requires-python = ">=3.7"

[project.optional-dependencies]
dev = [
    "compwa-org[doc]",
    "compwa-org[jupyter]",
    "compwa-org[sty]",
    "compwa-org[test]",
    "sphinx-autobuild",
    "tox >=1.9", # for skip_install, use_develop
]
doc = [
    "Sphinx >=3",
    "myst-nb >=0.14", # nb_ configuration prefixes
    "sphinx-api-relink >=0.0.4",
    "sphinx-book-theme",
    "sphinx-codeautolink[ipython]",
    "sphinx-comments",
    "sphinx-copybutton",
    "sphinx-design",
    "sphinx-hep-pdgref",
    "sphinx-pybtex-etal-style",
    "sphinx-remove-toctrees",
    "sphinx-thebe",
    "sphinx-togglebutton",
    "sphinxcontrib-bibtex >=2",
]
jupyter = [
    "jupyterlab",
    "jupyterlab-code-formatter >=3.0.0",
    "jupyterlab-git",
    "jupyterlab-lsp",
    "jupyterlab-myst",
    "python-lsp-ruff",
    "python-lsp-server[rope]",
    'ypy-websocket <0.8.3; python_version <"3.8.0"',
]
sty = [
    "attrs",
    "compwa-org[types]",
    "nbformat",
    "pre-commit >=1.4.0",
    "ruff",
]
test = [
    "jupyter",
    "nbmake",
    'nbmake <1.3; python_version=="3.7.*"',
]
types = [
    "sphinx-api-relink >=0.0.4",
]

[project.readme]
content-type = "text/markdown"
file = "README.md"

[project.urls]
Documentation = "https://compwa.github.io/report"
Source = "https://github.com/ComPWA/report"
Tracker = "https://github.com/ComPWA/report/issues"

[tool.setuptools]
include-package-data = false

[tool.setuptools_scm]
local_scheme = "no-local-version"
version_scheme = "post-release"
write_to = "version.py"

[tool.isort]
profile = "black"

[tool.pixi.project]
channels = ["conda-forge"]
platforms = ["linux-64"]

[tool.pixi.activation.env]
PRETTIER_LEGACY_CLI = "1"
PYTHONHASHSEED = "0"

[tool.pixi.dependencies]
graphviz = "*"
juliaup = "*"
python = "3.12.*"

[tool.pixi.environments]
default = {features = [
    "dev",
    "doc",
    "jupyter",
    "sty",
    "test",
    "types",
]}

[tool.pixi.feature.dev.tasks.ci]
depends_on = ["docnb", "linkcheck", "sty"]

[tool.pixi.feature.dev.tasks.doc]
cmd = """
sphinx-build \
    --builder html \
    --fail-on-warning \
    --keep-going \
    --show-traceback \
    docs/ docs/_build/html
"""
env = {FORCE_COLOR = "1", PYTHONWARNINGS = "", ZFIT_DISABLE_TF_WARNINGS = "1"}

[tool.pixi.feature.dev.tasks.doclive]
cmd = """
sphinx-autobuild \
    --open-browser \
    --re-ignore '.*/.ipynb_checkpoints/.*' \
    --re-ignore '.*/__pycache__/.*' \
    --re-ignore '.*\\.gitignore' \
    --re-ignore 'docs/.*\\.csv' \
    --re-ignore 'docs/.*\\.gif' \
    --re-ignore 'docs/.*\\.gv' \
    --re-ignore 'docs/.*\\.inv' \
    --re-ignore 'docs/.*\\.json' \
    --re-ignore 'docs/.*\\.pickle' \
    --re-ignore 'docs/.*\\.png' \
    --re-ignore 'docs/.*\\.svg' \
    --re-ignore 'docs/.*\\.yaml' \
    --re-ignore 'docs/.*\\.yml' \
    --re-ignore 'docs/_build/.*' \
    --re-ignore docs/_static/exported_intensity_model.py \
    --watch docs \
    docs/ docs/_build/html
"""
env = {FORCE_COLOR = "1", PYTHONWARNINGS = "", ZFIT_DISABLE_TF_WARNINGS = "1"}

[tool.pixi.feature.dev.tasks.docnb]
cmd = "pixi run doc"
env = {EXECUTE_NB = "yes", FORCE_COLOR = "1", PYTHONWARNINGS = "", TF_CPP_MIN_LOG_LEVEL = "3", ZFIT_DISABLE_TF_WARNINGS = "1"}

[tool.pixi.feature.dev.tasks.docnb-force]
cmd = "pixi run doc"
env = {FORCE_COLOR = "1", FORCE_EXECUTE_NB = "yes", PYTHONWARNINGS = "", TF_CPP_MIN_LOG_LEVEL = "3", ZFIT_DISABLE_TF_WARNINGS = "1"}

[tool.pixi.feature.dev.tasks.docnblive]
cmd = "pixi run doclive"
env = {EXECUTE_NB = "yes", FORCE_COLOR = "1", PYTHONWARNINGS = "", TF_CPP_MIN_LOG_LEVEL = "3", ZFIT_DISABLE_TF_WARNINGS = "1"}

[tool.pixi.feature.dev.tasks.linkcheck]
cmd = """
sphinx-build \
    --builder linkcheck \
    --show-traceback \
    docs/ docs/_build/linkcheck
"""
env = {FORCE_COLOR = "1"}

[tool.pixi.feature.dev.tasks.nb]
cmd = "pytest --nbmake docs"

[tool.pixi.feature.dev.tasks.sty]
cmd = "pre-commit run  -a"
env = {SKIP = "pyright"}

[tool.pixi.pypi-dependencies]
compwa-org = {path = ".", editable = true}

[tool.pyright]
exclude = [
    "**/.git",
    "**/.ipynb_checkpoints",
    "**/.mypy_cache",
    "**/.pytest_cache",
    "**/.tox",
    "**/__pycache__",
    "**/_build",
]
reportGeneralTypeIssues = false
reportIncompatibleMethodOverride = false
reportMissingParameterType = false
reportMissingTypeArgument = false
reportMissingTypeStubs = false
reportOperatorIssue = false
reportOverlappingOverload = false
reportPrivateImportUsage = false
reportPrivateUsage = false
reportReturnType = false
reportUnboundVariable = false
reportUnknownArgumentType = false
reportUnknownLambdaType = false
reportUnknownMemberType = false
reportUnknownParameterType = false
reportUnknownVariableType = false
reportUnnecessaryComparison = false
reportUnnecessaryContains = false
reportUnnecessaryIsInstance = false
reportUntypedFunctionDecorator = false
reportUnusedClass = true
reportUnusedFunction = true
reportUnusedImport = true
reportUnusedVariable = true
typeCheckingMode = "strict"

[tool.pytest.ini_options]
addopts = [
    "--color=yes",
    "--doctest-continue-on-failure",
    "--doctest-modules",
    "--durations=0",
    "--ignore-glob=*/.ipynb_checkpoints/*",
    "--ignore=docs/conf.py",
    "--nbmake",
    "--nbmake-timeout=1200",
    "-k not docs/019.ipynb",
]
filterwarnings = [
    "error",
    "ignore:Passing a schema to Validator.iter_errors is deprecated.*:DeprecationWarning",
    "ignore:open_text is deprecated.*:DeprecationWarning",
    "ignore:read_text is deprecated.*:DeprecationWarning",
    "ignore:unclosed .*:ResourceWarning",
]
norecursedirs = [
    ".ipynb_checkpoints",
    ".virtual_documents",
    "_build",
]
testpaths = [
    ".pre-commit",
    "docs",
]

[tool.ruff]
extend-include = ["*.ipynb"]
preview = true
show-fixes = true

[tool.ruff.format]
docstring-code-format = true
line-ending = "lf"

[tool.ruff.lint]
ignore = [
    "ANN401",
    "ARG00",
    "COM812",
    "CPY001",
    "D101",
    "D102",
    "D103",
    "D105",
    "D107",
    "D203",
    "D213",
    "D407",
    "D416",
    "DOC",
    "E501",
    "FBT",
    "FURB101",
    "FURB103",
    "FURB140",
    "G004",
    "ISC001",
    "PLW1514",
    "PT001",
    "PTH",
    "SIM108",
    "SLF001",
]
select = ["ALL"]
task-tags = ["cspell"]

[tool.ruff.lint.flake8-builtins]
builtins-ignorelist = ["display"]

[tool.ruff.lint.flake8-comprehensions]
allow-dict-calls-with-keyword-arguments = true

[tool.ruff.lint.flake8-self]
ignore-names = [
    "_latex",
    "_print",
]

[tool.ruff.lint.isort]
split-on-trailing-comma = false

[tool.ruff.lint.per-file-ignores]
"*.ipynb" = [
    "A003",
    "ANN",
    "B008",
    "B018",
    "C408",
    "C90",
    "D",
    "E303",
    "E402",
    "E703",
    "E741",
    "F404",
    "N802",
    "N803",
    "N806",
    "N807",
    "N815",
    "N816",
    "PD901",
    "PLC0415",
    "PLC2401",
    "PLR09",
    "PLR2004",
    "PLW0602",
    "PLW0603",
    "PLW2901",
    "PYI034",
    "RUF001",
    "RUF027",
    "S101",
    "S307",
    "T20",
    "TCH00",
]
"**/003.ipynb" = ["B023", "PLC2701"]
"**/009.ipynb" = ["FURB113"]
"**/010.ipynb" = ["FURB113"]
"**/011.ipynb" = ["PLC2701", "PLR6301"]
"**/014.ipynb" = ["PLC2701"]
"**/016.ipynb" = ["PLC2701"]
"**/021.ipynb" = ["I001"]
"**/022.ipynb" = ["PLC2701"]
"**/024.ipynb" = ["E731", "E741", "S307"]
"**/025.ipynb" = ["E731"]
"**/98*.ipynb" = ["E731", "PLR6301"]
"docs/*" = [
    "D",
    "E402",
    "INP001",
    "S101",
    "S113",
    "T201",
]
"docs/002.ipynb" = ["F821"]
"docs/003.ipynb" = ["F821", "S404", "S603"]
"docs/004.ipynb" = ["S404", "S603"]
"docs/005.ipynb" = ["F821", "S404", "S603"]
"docs/006.ipynb" = ["S404", "S603"]
"docs/009.ipynb" = ["S404", "S603"]
"docs/010.ipynb" = ["S404", "S603"]
"docs/011.ipynb" = ["F821"]
"docs/017.ipynb" = ["S404", "S603"]
"docs/020.ipynb" = ["F821"]
"docs/021.ipynb" = ["FIX004", "S404", "S603"]
"docs/022.ipynb" = ["F821"]
"docs/024.ipynb" = ["F821", "S102"]
"docs/025.ipynb" = ["S404", "S603"]
"docs/027.ipynb" = ["PLW1510", "S404", "S603"]
"docs/028.ipynb" = ["PERF203"]
"docs/conf.py" = [
    "A001",
    "D100",
    "PLC2701",
    "PLW2901",
]
"pin_nb_requirements.py" = ["INP001", "PLW2901"]
"setup.py" = ["D100"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.tomlsort]
all = false
ignore_case = true
in_place = true
sort_first = [
    "build-system",
    "project",
    "tool.setuptools",
    "tool.setuptools_scm",
]
spaces_indent_inline_array = 4
trailing_comma_inline_array = true
